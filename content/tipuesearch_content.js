var tipuesearch = {"pages": [{'title': 'About', 'text': '本學期的電腦輔助設計實習, 要求每一位學員根據本 HW template 的格式建立個人的作業倉儲與網頁. \n \n 學號: 40923212 \n 網站倉儲:\xa0 https://github.com/40923212/cad2021_hw \n 網站連結:\xa0 https://40923212.github.io/cad2021_hw/ \n', 'tags': '', 'url': 'About.html'}, {'title': 'Task', 'text': 'Task我的作法:將所有學號以及網頁連結列出，再將以上放入編輯器的source code。 \n \n 遇到的問題:不會利用工具將學號及網頁連結一同做出，需要用手動。 \n 解決方法:找會的同學求救解答。 \n 增加倉儲連結後push，在github沒有綠勾。 \n \n 正確做法: \n 於souece code 輸入: \n <!-- 導入 brython 程式庫 --> <script src="./../cmsimde/static/brython.js"></script> <script src="./../cmsimde/static/brython_stdlib.js"></script> <!-- 啟動 Brython --> <script> window.onload=function(){ brython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']}); } </script> <div id="brython_div"></div> <script type="text/python"> \n 程式內容 \n </script> \n 抽點程式位置:\xa0 https://mde.tw/cad2021/content/%E6%8A%BD%E9%BB%9E.html \n', 'tags': '', 'url': 'Task.html'}, {'title': 'hwpages', 'text': 'cad2021 2b \n cad2b w2 github account \n 40723126 repo: 40723126 \xa0www: 40723126 \n 40723135 repo: 40723135 \xa0www: 40723135 \n 40723217 repo: 40723217 \xa0www: 40723217 \n 40732331 repo: 40732331 \xa0www: 40732331 \n 40823114 repo: 40823114 \xa0www: 40823114 \n 40823115 repo: 40823115 \xa0www: 40823115 \n 40823117 repo: pyc40823117 \xa0www: pyc40823117 \n 40823119 repo: 40823119 \xa0www: 40823119 \n 40823122 repo: 40823122 \xa0www: 40823122 \n 40823127 repo: 40823127 \xa0www: 40823127 \n 40823146 repo: 40823146 \xa0www: 40823146 \n 40823148 repo: 40823148 \xa0www: 40823148 \n 40823215 repo: 40823215 \xa0www: 40823215 \n 40871106 repo: 40871106 \xa0www: 40871106 \n 40923201 repo: 40923201 \xa0www: 40923201 \n 40923203 repo: youshin40923203 \xa0www: youshin40923203 \n 40923204 repo: 40923204 \xa0www: 40923204 \n 40923205 repo: 40923205 \xa0www: 40923205 \n 40923206 repo: 40923206 \xa0www: 40923206 \n 40923207 repo: 40923207 \xa0www: 40923207 \n 40923208 repo: nfu40923208 \xa0www: nfu40923208 \n 40923209 repo: nfu40923209 \xa0www: nfu40923209 \n 40923210 repo: 40923210 \xa0www: 40923210 \n 40923211 repo: a40923211 \xa0www: a40923211 \n 40923212 repo: 40923212 \xa0www: 40923212 \n 40923213 repo: 40923213 \xa0www: 40923213 \n 40923214 repo: 40923214 \xa0www: 40923214 \n 40923216 repo: 40923216 \xa0www: 40923216 \n 40923217 repo: 40923217 \xa0www: 40923217 \n 40923218 repo: 40923218 \xa0www: 40923218 \n 40923219 repo: nfu40923219 \xa0www: nfu40923219 \n 40923220 repo: 40923220 \xa0www: 40923220 \n 40923221 repo: 40923221 \xa0www: 40923221 \n 40923221 repo: 40923223 \xa0www: 40923223 \n 40923224 repo: s40923224 \xa0www: s40923224 \n 40923225 repo: 40923225 \xa0www: 40923225 \n 40923226 repo: 40923226 \xa0www: 40923226 \n 40923227 repo: 40923227 \xa0www: 40923227 \n 40923228 repo: 40923228 \xa0www: 40923228 \n 40923229 repo: 40923229 \xa0www: 40923229 \n 40923230 repo: 40923230 \xa0www: 40923230 \n 40923231 repo: 40923231 \xa0www: 40923231 \n 40923232 repo: 40923232 \xa0www: 40923232 \n 40923233 repo: 40923233 \xa0www: 40923233 \n 40923234 repo: 40923234 \xa0www: 40923234 \n 40923235 repo: 40923235 \xa0www: 40923235 \n 40923236 repo: 40923236 \xa0www: 40923236 \n 40923237 repo: 40923237 \xa0www: 40923237 \n 40923238 repo: 40923238 \xa0www: 40923238 \n 40923239 repo: 40923239 \xa0www: 40923239 \n 40923240 repo: 40923240 \xa0www: 40923240 \n 40923241 repo: 40923241 \xa0www: 40923241 \n 40923242 repo: 40923242 \xa0www: 40923242 \n 40923243 repo: 40923243 \xa0www: 40923243 \n 40923244 repo: 40923244 \xa0www: 40923244 \n 40923245 repo: 40923245-1 \xa0www: 40923245-1 \n 40923246 repo: 40923246 \xa0www: 40923246 \n 40923247 repo: 40923247 \xa0www: 40923247 \n 40923248 repo: 40923248 \xa0www: 40923248 \n 40923249 repo: 40923249-1 \xa0www: 40923249-1 \n 40923250 repo: 40923250 \xa0www: 40923250 \n 40923251 repo: 40923251 \xa0www: 40923251 \n 40923252 repo: 40923252 \xa0www: 40923252 \n 40923253 repo: 40923253 \xa0www: 40923253 \n 40971220 repo: 40971220 \xa0www: 40971220 \n 40971227 repo: 40971227 \xa0www: 40971227 \n', 'tags': '', 'url': 'hwpages.html'}, {'title': 'run', 'text': ' 導入 brython 程式庫  \n \n \n  啟動 Brython  \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n pybean <<  Previous \n', 'tags': '', 'url': 'run.html'}, {'title': 'HW1', 'text': '\n 我的分配結果: nx，Solvespace \n \n HW1 具體項目成果回報區 \n 作業一: meArm Robot 零件繪圖與機電運動模擬場景製作 \n Step1 : 下載  meARM.7z  這個包含尚未完成組立的 meArm Robot 場景與雷射切割零件組立手冊. \n meArm_75-0040_v1.pdf  則是另外一本組立參考手冊. \n Step2 : 從課程網頁中的  Compile CoppeliaSim 頁面 , 下載  coppeliaSim 4.1.0 官方版與 MSYS2 編譯版.7z  (檔案大小 412 MB, 解開壓縮後 1GB) 可攜套件. \n Step3 : 在 HW1 中, 要求每一位學員透過程式亂數分配 (兩班實際亂數分配結果以上課時點擊下列按鈕所得結果為準) 所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,\xa0 經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件 匯入  CoppeliaSim 進行組裝配置後, 以  UI 介面 中的 slider 控制 meArm Robot 各軸的旋轉作動. \n 2b CAD 套件分配結果:  https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt \n 附件: \n 1. CAD 套件分配表: \n sw: Solidworks, inv: Inventor, nx: NX12, ons: Onshape, slvs: Solvespace \n 2a 套件亂數分配結果 \n 2b 套件亂數分配結果 \n 2. 在兩套 CAD 完成零件繪圖並轉入 CoppeliaSim 後, 為了建立 Dynamic Model 必須利用  shape edit modes  轉為  clean model , 並與實際轉入的 STL 格式零件外形結合應用後建立模擬場景 (scenes). \n 3. meARM Robot  動態模擬場景 的建構, 可參考  0 ,  1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 , 也可參考  Uarm Robot model  與相關 影片 . \n 4. CoppeliaSim design dynamic simulations  說明頁面 . \n 5.  網際 Lua  程式執行. \n 6.  meArm.slvs ,  meArm_in_solvespace.slvs \n 7. UI 介面程式參考: \n function closeEventHandler(h)\n    sim.addLog(sim.verbosity_scriptinfos,\'Window \'..h..\' is closing...\')\n    simUI.hide(h)\nend\n\nfunction joint1_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta1 set to \'..newVal)\n    sim.setJointTargetPosition(joint1, newVal*deg)\nend\n\nfunction joint2_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta2 set to \'..newVal)\n    sim.setJointTargetPosition(joint2, newVal*deg)\nend\n\nfunction joint3_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta3 set to \'..newVal)\n    sim.setJointTargetPosition(joint3, newVal*deg)\nend\n\nfunction joint16_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta16 set to \'..newVal)\n    sim.setJointTargetPosition(joint16, newVal*deg)\n    sim.setJointTargetPosition(joint20, -newVal*deg)\nend\n\nfunction sysCall_init()\n    -- do some initialization here\n    joint1 = sim.getObjectHandle(\'motor1\')\n    joint2 = sim.getObjectHandle(\'motor2\')\n    joint3 = sim.getObjectHandle(\'motor3\')\n    joint16 = sim.getObjectHandle(\'motor16\')\n    joint20 = sim.getObjectHandle(\'motor20\')\n    i = 0\n    deg = math.pi/180\n    print(i)\n    xml = [[\n<ui closeable="true" on-close="closeEventHandler" resizable="true">\n    <label text="This is a demo of the CustomUI plugin. Browse through the tabs below to explore all the widgets that can be created with the plugin." wordwrap="true" />\n    <tabs>\n        <tab title="Numeric">a\n            <label text="Sliders can be oriented horizontally or vertically, and have optional properties that can be set (in the XML) such as minimum and maximum value." wordwrap="true" />\n            <label text="" id="3000" wordwrap="true" />\n            <label text="theta1" /> <hslider tick-position="above" tick-interval="1" \n            minimum="0" maximum="360" on-change="joint1_rotate" />\n            <label text="theta2" /> <hslider tick-position="above" tick-interval="1" \n            minimum="-90" maximum="65" on-change="joint2_rotate" />\n            <label text="theta3" /> <hslider tick-position="above" tick-interval="1" \n            minimum="-90" maximum="185" on-change="joint3_rotate" />\n            <label text="theta16" /> <hslider tick-position="above" tick-interval="1" \n            minimum="0" maximum="15" on-change="joint16_rotate" />\n        </tab>\n    </tabs>\n</ui>\n]]\n    ui=simUI.create(xml)\n    \nend \n \n (From:  2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf ) \n \n \xa0 \n 要求每一位學員透過程式亂數分配，所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,\xa0 經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件 匯入 \xa0 CoppeliaSim 進行組裝配置後, 以 \xa0 UI 介面 中的 slider 控制 meArm Robot 各軸的旋轉作動. \n 我的分配結果: nx，Solvespace \n \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'NX', 'text': '\n NX 是 Siemens PLM Software 公司出品的一個產品工程解決方案，它為用户的產品設計及加工過程提供了數字化造型和驗證手段。 \n NX這是一個交互式 CAD/CAM(計算機輔助設計與計算機輔助製造)系統，它功能強大，可以輕鬆實現各種複雜實體及造型的建構。 \n 它在誕生之初主要基於工作站，但隨着PC硬件的發展和個人用户的迅速增長，在PC上的應用取得了迅猛的增長，已經成為模具行業三維設計的一個主流應用。 \n 來自SiemensPLM 的 NX使企業能夠通過新一代數字化產品開發系統實現向產品全生命週期管理轉型的目標。 NX 包含了企業中應用最廣泛的集成應用套件，用於產品設計、工程和製造全範圍的開發過程。 \n \n \n', 'tags': '', 'url': 'NX.html'}, {'title': 'NX 安裝配置', 'text': 'CAD1 指各學員所分配到的第一套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace. \n CAD1 套件下載安裝與配置 \n CAD1 下載安裝與配置流程 embedded 影片: 標題必須為「 NFU - MDE - cad2021 - 學號 - SW2020 下載安裝與配置 」且加上 語音說明 與 字幕. \n 若使用 Solidworks 2017 版, 則將 SW2020 換為 SW2017, 其他套件 INV2020 代表 AutoDesk Inventor 2020 版, 還有 Onshape 與 Solvespace 等套件名稱. \n 由於安裝配置 Solidworks 時必須使用 nfu 的 vpn, 因此各學員必須按照 說明 , 完成本學期的 vpn 使用申請. \n \n NX12 版本: \n NX12 安裝光碟下載  (必須先登入 @gm 帳號後才能下載) \n NX12 可攜版本下載 \xa0(必須先登入 @gm 帳號後才能下載) \n \n \n', 'tags': '', 'url': 'NX 安裝配置.html'}, {'title': 'NX 操作流程', 'text': 'CAD1 指各學員所分配到的第一套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace. \n CAD1 零組件繪圖操作流程影片 (Youtube) \n CAD1 零組件繪圖教學影片 (Wink) \n CAD1 零組件繪圖教學影片 embedded 影片: 標題必須為「 NFU - MDE - cad2021 - 學號 - SW2020  零組件繪圖教學影片」且加上 語音說明 與 字幕. \n \n \n', 'tags': '', 'url': 'NX 操作流程.html'}, {'title': 'Solvespace', 'text': 'SOLVESPACE 是一個免費的 (GPLv3) 參數化 3d CAD 工具。應用包括： \n \n \n 建模 3d 零件 — 使用拉伸、旋轉、螺旋線和布爾（並/差/交）操作進行繪製 \n 二維零件建模 — 將 零件 繪製為單個部分，並導出 DXF、PDF、SVG； 使用 3d 裝配來驗證適合 \n 3d 打印部件 — 導出大多數 3d 打印機所需的 STL 或其他三角形網格 \n 準備 CAM 數據 — 為水刀機或激光切割機導出二維矢量圖； 或生成STEP或STL，導入第三方CAM軟件進行加工 \n 機構設計 — 使用約束求解器模擬平面或空間鏈接，包括銷、球或滑動關節 \n 平面和實體幾何 — 用實時尺寸繪圖替換手工求解的三角函數和電子表格 \n \n 官方網站: https://solvespace.com/index.pl \n \n', 'tags': '', 'url': 'Solvespace.html'}, {'title': 'Solvespace 安裝配置', 'text': '先下載\xa0 SolveSpace \n \n 按下\xa0 Download \n \n 點開 \xa0 3.0stable \n \n 就來到 github ，再選擇 \xa0 solvespace.exe\xa0 下載下來 \n \n 下載完後將小白窗開啟，加入\xa0 star %Disk%solvespace.exe \xa0 ，儲存下來 \n \n 重啟 \xa0 start_ipv4 \xa0 後，就會直接開啟\xa0 solvespace \n \n 影片 \n \n', 'tags': '', 'url': 'Solvespace 安裝配置.html'}, {'title': 'solvespace 操作', 'text': '\n Sketch 草圖 \n \n Constrain 約束 \n \n New Group 組成 \n \n View 視角 \n \n 影片 \n \n \n \n', 'tags': '', 'url': 'solvespace 操作.html'}, {'title': '運動場景', 'text': 'NX: \n \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n solvespace: \n \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '運動場景.html'}, {'title': 'wink', 'text': 'Google尋找\xa0 debugmode wink \n \n 將\xa0 wink \xa0 下載 \n \n 點開\xa0 winksetup ，按下 \xa0 I Agree \n \n 按\xa0 Browse\xa0 將資料存在\xa0 date\xa0 裡的\xa0 wink ，最後\xa0 Install\xa0 就下載好了 \n \n 點開\xa0 wink.exe \n \n 開啟後就可以使用\xa0 wink \xa0 製作影片 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'wink.html'}, {'title': 'W13', 'text': '零件進度 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n \n \n \n   \n \n \n \n \n \n \n \n 第一軸旋轉 \n \n \n \n \n \n \n   \n \n \n \n \n \n \n \n 第二三軸旋轉 \n \n \n \n \n \n \n   \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W13.html'}, {'title': 'meARM', 'text': '\n \n \n   \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'meARM.html'}, {'title': 'CoppeliaSim', 'text': '\n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'CoppeliaSim.html'}, {'title': '零件Cloud', 'text': '\n NX&SOLVESPACE零件 \n', 'tags': '', 'url': '零件Cloud.html'}, {'title': 'HW1-1', 'text': 'HW1-1 佔學期成績 15% \n HW1-1 必須在 2021.12.01 22:00 之前完成. \n HW1-1 具體項目成果回報區 將於 2021.11.18 開啟, 於  2021.12.01 22:00 關閉. \n 作業 1-1: Mirobot 機械手臂場景組合 \n 說明: meArm Robot 有四個自由度, 請根據 HW1 的零組件繪製組立與 CoppeliaSim 運動場景模擬, 延伸至  Task1-1  中六個自由度的 Mirobot 機械手臂. \n mirobot_part1_to_part5.7z  為取自 \xa0 https://github.com/wlkata/Mirobot-STL  的參考零件. 請利用場景中 Mirobot STL 零件, 組合為可以透過  UI 介面 中的 slider 控制各軸作動旋轉的運動模型. \n 請根據  Task1-1  中的說明, 完成各項指定任務. \n', 'tags': '', 'url': 'HW1-1.html'}, {'title': 'W11查驗', 'text': '請檢查作業網站中 \xa0 W11 \xa0 週的抽點名單是否正確. 若否請透過 \xa0 https://github.com/mdecourse/studlist \xa0 倉儲中的 Pull Requests 機制要求訂正. \n 請各學員自選一組 平面四連桿尺寸 , 分別使用個人所分配的兩套 CAD 進行零件繪圖, 完成組立後請轉入 CoppeliaSim 製作運動模擬場景. \n 驗收交付內容: \n \n 各 零件尺寸圖 與 \xa0 3D 零件檔案 , 請放入各學員的倉儲中並在 W11 標題 H2 頁面中 提供下載 . \n 請將兩套 CAD \xa0 繪圖過程製作成一份 Wink 影片 檔案, 並放入 W11 標題 H2 頁面中.. \n 請將組立件轉入 CoppeliaSim, 並製作運動 模擬場景的過程, 製作成一份 Wink 影片 檔案, 並放入個人網頁中的 W11 標題 H2 頁面中. \n \n \n', 'tags': '', 'url': 'W11查驗.html'}, {'title': '零件檔案下載', 'text': 'NX&SOLVESPACE零件 \n 3連桿零件 \n', 'tags': '', 'url': '零件檔案下載.html'}, {'title': '零件繪製', 'text': '\n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '零件繪製.html'}, {'title': 'HW2', 'text': 'HW2 佔學期成績 20% \n HW2 必須在 2021.12.22 22:00 之前完成. \n HW2 具體項目成果回報區 將於 2021.12.09 開啟, 於  2021.12.22 22:00 關閉. \n meArm 逆向運動學與網際參數式 CAD API 結合應用. \n 請將  https://github.com/mdecourse/meArm  中的 meArm Robot 逆向運動學程式, 改為 Lua 與 Python 程式, 使能套用至 HW1 所完成的 CoppeliaSim meArm 運動模擬場景. 並分別採 Lua, Legacy remote API 及 Bluezero remote API 逆向運動的方式進行控制. \n 請利用  Task2  中的 Solidworks, Inventor 與 NX API 程式控制 meArm Robot 零組件尺寸, 說明並討論如何透過網際程式控制 meArm Robot 的零件尺寸, 並結合上述逆向運動學程式庫, 使得自動化機電產品開發流程更容易滿足客製化需求. \n 參考: \n 2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf \n Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenber.pdf \n KINEMATIC ANALYSIS FOR ROBOT ARM.pdf \n https://codebender.cc/user/MeArm \n https://github.com/mdecourse/meArmPi \n /downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf \n https://github.com/mdecourse/me-arm-ik \n https://github.com/mdecourse/mearm_model \n https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html \n https://github.com/mdecourse/InefficientSkittleSorter \n https://mearm.com \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 為選項作業. \n HW3 具體項目成果回報區 將於 2021.12.09 開啟, 於  2022.01.05 22:00 關閉 \n https://mde.tw/cad2021/content/Task3.html \xa0 \n https://mde.tw/cad2021/content/Task4.html \n https://mde.tw/cad2021/content/Task5.html \n https://mde.tw/cad2021/content/Task6.html \n https://mde.tw/cad2021/content/Task7.html \n 請從上列 Tasks 中自行選擇項目內容完成 HW3. \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Final Project', 'text': 'Final Project 佔學期成績 40% \n 2a 與 2b 必須在 2022.01.06 上課之前完成 Final Project \n Final Project 具體項目成果回報區 將於 2021.12.09 開啟, 於  2022.01.05 22:00 關閉 \n 彈性製造系統場景設計與製作 \n 請從  https://github.com/mdecourse/scenes  與  https://github.com/mdecourse/models  中選擇場景或模型, 配合  cad2021_textbook.pdf  (登入 @gm 帳號後下載) 教材中的內容, 自選製作與組立產品, 組合成一個 Flexible Manufacturing System 系統場景. \n 彈性製造系統內容說明 \n 範例: \n \n \n', 'tags': '', 'url': 'Final Project.html'}, {'title': '拯救Github帳號', 'text': '這學期要上課時發現我的Github帳號無法使用，並且出現\xa0 Your account has been flagged. Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed. \n 您的帳戶已被標記。 因此，您的個人資料對公眾是隱藏的。如果您認為這是一個錯誤，請聯繫支持人員以審核您的帳戶狀態。 \n 並且連帶Gitter都沒辦法使用。 \n \n', 'tags': '', 'url': '拯救Github帳號.html'}, {'title': '解決方法', 'text': '在Github點選 Pull requests ，向Github提出問題後寄出Email給Github。(如下圖) \n \n 隨後Github回信，他們表示懷疑我 持有多個免費帳號 ，所以將我的帳號標記。 \n \n 我就向他表示這是個天大的誤會，我並沒有持有多個免費帳號，並且這個帳號是用來學習的，請他們解除標記我的帳號。 \n \n 隨後他們收到我的回信後，就給我一份問卷請我填寫，我填寫完後他們就移除標記我的帳號了。 \n', 'tags': '', 'url': '解決方法.html'}]};