<h1>About</h1>
<p>本學期的電腦輔助設計實習, 要求每一位學員根據本 HW template 的格式建立個人的作業倉儲與網頁.</p>
<hr/>
<p>學號: 40923212</p>
<p>網站倉儲: <a href="https://github.com/40923212/cad2021_hw">https://github.com/40923212/cad2021_hw</a></p>
<p>網站連結: <a href="https://40923212.github.io/cad2021_hw/">https://40923212.github.io/cad2021_hw/</a></p>
<h1>Task</h1>
<p>Task我的作法:將所有學號以及網頁連結列出，再將以上放入編輯器的source code。</p>
<p><img alt="" height="343" src="/images/source code.png" width="435"/></p>
<p>遇到的問題:不會利用工具將學號及網頁連結一同做出，需要用手動。</p>
<p>解決方法:找會的同學求救解答。</p>
<p>增加倉儲連結後push，在github沒有綠勾。</p>
<p><img alt="" height="231" src="/images/githud not green hook.png" width="513"/></p>
<p><span style="color: #ff0000; background-color: #ffff99;">正確做法:</span></p>
<p><span style="color: #000000;">於souece code 輸入:</span></p>
<p><br/>&lt;!-- 導入 brython 程式庫 --&gt;<br/>&lt;script src="/static/brython.js"&gt;&lt;/script&gt;<br/>&lt;script src="/static/brython_stdlib.js"&gt;&lt;/script&gt;<br/>&lt;!-- 啟動 Brython --&gt;<br/>&lt;script&gt;<br/>window.onload=function(){<br/>brython({debug:1, pythonpath:['/static/','./../downloads/py/']});<br/>}<br/>&lt;/script&gt;<br/>&lt;div id="brython_div"&gt;&lt;/div&gt;<br/>&lt;script type="text/python"&gt;</p>
<p><span style="color: #ff0000; background-color: #ccffff;">程式內容</span></p>
<p>&lt;/script&gt;</p>
<p>抽點程式位置: <a href="https://mde.tw/cad2021/content/%E6%8A%BD%E9%BB%9E.html">https://mde.tw/cad2021/content/%E6%8A%BD%E9%BB%9E.html</a></p>
<h2>hwpages</h2>
<p>cad2021 2b</p>
<p>cad2b w2 github account</p>
<p>40723126 repo:<a href="https://40723126.github.io/cad2021_hw">40723126</a> www:<a href="https://github.com/40723126/cad2021_hw">40723126</a></p>
<p>40723135 repo:<a href="https://40723135.github.io/cad2021_hw">40723135</a> www:<a href="https://github.com/40723135/cad2021_hw">40723135</a></p>
<p>40723217 repo:<a href="https://40723217.github.io/cad2021_hw">40723217</a> www:<a href="https://github.com/40723217/cad2021_hw">40723217</a></p>
<p>40732331 repo:<a href="https://40732331.github.io/cad2021_hw">40732331</a> www:<a href="https://github.com/40732331/cad2021_hw">40732331</a></p>
<p>40823114 repo:<a href="https://40823114.github.io/cad2021_hw">40823114</a> www:<a href="https://github.com/40823114/cad2021_hw">40823114</a></p>
<p>40823115 repo:<a href="https://40823115.github.io/cad2021_hw">40823115</a> www:<a href="https://github.com/40823115/cad2021_hw">40823115</a></p>
<p>40823117 repo:<a href="https://pyc40823117.github.io/cad2021_hw">pyc40823117</a> www:<a href="https://github.com/pyc40823117/cad2021_hw">pyc40823117</a></p>
<p>40823119 repo:<a href="https://40823119.github.io/cad2021_hw">40823119</a> www:<a href="https://github.com/40823119/cad2021_hw">40823119</a></p>
<p>40823122 repo:<a href="https://40823122.github.io/cad2021_hw">40823122</a> www:<a href="https://github.com/40823122/cad2021_hw">40823122</a></p>
<p>40823127 repo:<a href="https://40823127.github.io/cad2021_hw">40823127</a> www:<a href="https://github.com/40823127/cad2021_hw">40823127</a></p>
<p>40823146 repo:<a href="https://40823146.github.io/cad2021_hw">40823146</a> www:<a href="https://github.com/40823146/cad2021_hw">40823146</a></p>
<p>40823148 repo:<a href="https://40823148.github.io/cad2021_hw">40823148</a> www:<a href="https://github.com/40823148/cad2021_hw">40823148</a></p>
<p>40823215 repo:<a href="https://40823215.github.io/cad2021_hw">40823215</a> www:<a href="https://github.com/40823215/cad2021_hw">40823215</a></p>
<p>40871106 repo:<a href="https://40871106.github.io/cad2021_hw">40871106</a> www:<a href="https://github.com/40871106/cad2021_hw">40871106</a></p>
<p>40923201 repo:<a href="https://40923201.github.io/cad2021_hw">40923201</a> www:<a href="https://github.com/40923201/cad2021_hw">40923201</a></p>
<p>40923203 repo:<a href="https://youshin40923203.github.io/cad2021_hw">youshin40923203</a> www:<a href="https://github.com/youshin40923203/cad2021_hw">youshin40923203</a></p>
<p>40923204 repo:<a href="https://40923204.github.io/cad2021_hw">40923204</a> www:<a href="https://github.com/40923204/cad2021_hw">40923204</a></p>
<p>40923205 repo:<a href="https://40923205.github.io/cad2021_hw">40923205</a> www:<a href="https://github.com/40923205/cad2021_hw">40923205</a></p>
<p>40923206 repo:<a href="https://40923206-1.github.io/cad2021_hw">40923206</a> www:<a href="https://github.com/40923206/cad2021_hw">40923206</a></p>
<p>40923207 repo:<a href="https://40923207.github.io/cad2021_hw">40923207</a> www:<a href="https://github.com/40923207/cad2021_hw">40923207</a></p>
<p>40923208 repo:<a href="https://nfu40923208.github.io/cad2021_hw">nfu40923208</a> www:<a href="https://github.com/nfu40923208/cad2021_hw">nfu40923208</a></p>
<p>40923209 repo:<a href="https://nfu40923209.github.io/cad2021_hw">nfu40923209</a> www:<a href="https://github.com/nfu40923209/cad2021_hw">nfu40923209</a></p>
<p>40923210 repo:<a href="https://40923210.github.io/cad2021_hw">40923210</a> www:<a href="https://github.com/40923210/cad2021_hw">40923210</a></p>
<p>40923211 repo:<a href="https://a40923211.github.io/cad2021_hw">a40923211</a> www:<a href="https://github.com/a40923211/cad2021_hw">a40923211</a></p>
<p>40923212 repo:<a href="https://40923212.github.io/cad2021_hw">40923212</a> www:<a href="https://github.com/40923212/cad2021_hw">40923212</a></p>
<p>40923213 repo:<a href="https://40923213.github.io/cad2021_hw">40923213</a> www:<a href="https://github.com/40923213/cad2021_hw">40923213</a></p>
<p>40923214 repo:<a href="https://40923214.github.io/cad2021_hw">40923214</a> www:<a href="https://github.com/40923214/cad2021_hw">40923214</a></p>
<p>40923216 repo:<a href="https://40923216.github.io/cad2021_hw">40923216</a> www:<a href="https://github.com/40923216/cad2021_hw">40923216</a></p>
<p>40923217 repo:<a href="https://40923217.github.io/cad2021_hw">40923217</a> www:<a href="https://github.com/40923217/cad2021_hw">40923217</a></p>
<p>40923218 repo:<a href="https://40923218.github.io/cad2021_hw">40923218</a> www:<a href="https://github.com/40923218/cad2021_hw">40923218</a></p>
<p>40923219 repo:<a href="https://nfu40923219.github.io/cad2021_hw">nfu40923219</a> www:<a href="https://github.com/nfu40923219/cad2021_hw">nfu40923219</a></p>
<p>40923220 repo:<a href="https://40923220.github.io/cad2021_hw">40923220</a> www:<a href="https://github.com/40923220/cad2021_hw">40923220</a></p>
<p>40923221 repo:<a href="https://40923221.github.io/cad2021_hw">40923221</a> www:<a href="https://github.com/40923221/cad2021_hw">40923221</a></p>
<p>40923221 repo:<a href="https://40923223.github.io/cad2021_hw">40923223</a> www:<a href="https://github.com/40923223/cad2021_hw">40923223</a></p>
<p>40923224 repo:<a href="https://s40923224.github.io/cad2021_hw">s40923224</a> www:<a href="https://github.com/s40923224/cad2021_hw">s40923224</a></p>
<p>40923225 repo:<a href="https://40923225.github.io/cad2021_hw">40923225</a> www:<a href="https://github.com/40923225/cad2021_hw">40923225</a></p>
<p>40923226 repo:<a href="https://40923226.github.io/cad2021_hw">40923226</a> www:<a href="https://github.com/40923226/cad2021_hw">40923226</a></p>
<p>40923227 repo:<a href="https://40923227.github.io/cad2021_hw">40923227</a> www:<a href="https://github.com/40923227/cad2021_hw">40923227</a></p>
<p>40923228 repo:<a href="https://40923228.github.io/cad2021_hw">40923228</a> www:<a href="https://github.com/40923228/cad2021_hw">40923228</a></p>
<p>40923229 repo:<a href="https://40923229.github.io/cad2021_hw">40923229</a> www:<a href="https://github.com/40923229/cad2021_hw">40923229</a></p>
<p>40923230 repo:<a href="https://40923230.github.io/cad2021_hw">40923230</a> www:<a href="https://github.com/40923230/cad2021_hw">40923230</a></p>
<p>40923231 repo:<a href="https://40923231.github.io/cad2021_hw">40923231</a> www:<a href="https://github.com/40923231/cad2021_hw">40923231</a></p>
<p>40923232 repo:<a href="https://40923232.github.io/cad2021_hw">40923232</a> www:<a href="https://github.com/40923232/cad2021_hw">40923232</a></p>
<p>40923233 repo:<a href="https://40923233.github.io/cad2021_hw">40923233</a> www:<a href="https://github.com/40923233/cad2021_hw">40923233</a></p>
<p>40923234 repo:<a href="https://40923234.github.io/cad2021_hw">40923234</a> www:<a href="https://github.com/40923234/cad2021_hw">40923234</a></p>
<p>40923235 repo:<a href="https://40923235.github.io/cad2021_hw">40923235</a> www:<a href="https://github.com/40923235/cad2021_hw">40923235</a></p>
<p>40923236 repo:<a href="https://40923236.github.io/cad2021_hw">40923236</a> www:<a href="https://github.com/40923236/cad2021_hw">40923236</a></p>
<p>40923237 repo:<a href="https://40923237.github.io/cad2021_hw">40923237</a> www:<a href="https://github.com/40923237/cad2021_hw">40923237</a></p>
<p>40923238 repo:<a href="https://40923238.github.io/cad2021_hw">40923238</a> www:<a href="https://github.com/40923238/cad2021_hw">40923238</a></p>
<p>40923239 repo:<a href="https://40923239.github.io/cad2021_hw">40923239</a> www:<a href="https://github.com/40923239/cad2021_hw">40923239</a></p>
<p>40923240 repo:<a href="https://40923240.github.io/cad2021_hw">40923240</a> www:<a href="https://github.com/40923240/cad2021_hw">40923240</a></p>
<p>40923241 repo:<a href="https://40923241.github.io/cad2021_hw">40923241</a> www:<a href="https://github.com/40923241/cad2021_hw">40923241</a></p>
<p>40923242 repo:<a href="https://40923242.github.io/cad2021_hw">40923242</a> www:<a href="https://github.com/40923242/cad2021_hw">40923242</a></p>
<p>40923243 repo:<a href="https://40923243.github.io/cad2021_hw">40923243</a> www:<a href="https://github.com/40923243/cad2021_hw">40923243</a></p>
<p>40923244 repo:<a href="https://40923244.github.io/cad2021_hw">40923244</a> www:<a href="https://github.com/40923244/cad2021_hw">40923244</a></p>
<p>40923245 repo:<a href="https://40923245-1.github.io/cad2021_hw">40923245-1</a> www:<a href="https://github.com/40923245-1/cad2021_hw">40923245-1</a></p>
<p>40923246 repo:<a href="https://40923246.github.io/cad2021_hw">40923246</a> www:<a href="https://github.com/40923246/cad2021_hw">40923246</a></p>
<p>40923247 repo:<a href="https://40923247.github.io/cad2021_hw">40923247</a> www:<a href="https://github.com/40923247/cad2021_hw">40923247</a></p>
<p>40923248 repo:<a href="https://40923248.github.io/cad2021_hw">40923248</a> www:<a href="https://github.com/40923248/cad2021_hw">40923248</a></p>
<p>40923249 repo:<a href="https://40923249-1.github.io/cad2021_hw">40923249-1</a> www:<a href="https://github.com/40923249-1/cad2021_hw">40923249-1</a></p>
<p>40923250 repo:<a href="https://40923250.github.io/cad2021_hw">40923250</a> www:<a href="https://github.com/40923250/cad2021_hw">40923250</a></p>
<p>40923251 repo:<a href="https://40923251.github.io/cad2021_hw">40923251</a> www:<a href="https://github.com/40923251/cad2021_hw">40923251</a></p>
<p>40923252 repo:<a href="https://40923252.github.io/cad2021_hw">40923252</a> www:<a href="https://github.com/40923252/cad2021_hw">40923252</a></p>
<p>40923253 repo:<a href="https://40923253.github.io/cad2021_hw">40923253</a> www:<a href="https://github.com/40923253/cad2021_hw">40923253</a></p>
<p>40971220 repo:<a href="https://40971220.github.io/cad2021_hw">40971220</a> www:<a href="https://github.com/40971220/cad2021_hw">40971220</a></p>
<p>40971227 repo:<a href="https://40971227.github.io/cad2021_hw">40971227</a> www:<a href="https://github.com/40971227/cad2021_hw">40971227</a></p>
<h1>run</h1>
<p><!-- 導入 brython 程式庫 -->
<script src="/static/brython.js">
</script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/cmsimde/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/cmsimde/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/cmsimde/static/ace/ace.js" type="text/javascript"></script>
<script src="/cmsimde/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/cmsimde/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/cmsimde/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/e896a4705a95ac8cc4147b355b0e87ef/raw/8954b8280c524c5781dc3c0b3565bc489d3aa3a3/cango_gear1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<div id="brython_div"></div>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
<br/>pybean &lt;&lt; <a href="/pybean.html">Previous</a></p>
<h1>HW1</h1>
<p></p>
<p><span style="color: #ff0000;">我的分配結果: nx，Solvespace</span></p>
<p><span><img alt="" height="181" src="/images/分配.png" width="337"/></span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/5">HW1 具體項目成果回報區</a></p>
<h4>作業一: meArm Robot 零件繪圖與機電運動模擬場景製作</h4>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step1</span>: 下載 <a href="https://drive.google.com/file/d/18ukdNlFB9yHY-FZSY-bTnzrPrNv0FE4D/view?usp=sharing">meARM.7z</a> 這個包含尚未完成組立的 meArm Robot 場景與雷射切割零件組立手冊.</p>
<p style="padding-left: 60px;"><a href="/downloads/meArm_75-0040_v1.pdf">meArm_75-0040_v1.pdf</a> 則是另外一本組立參考手冊.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step2</span>: 從課程網頁中的 <a href="https://mde.tw/cad2021/content/Compile%20CoppeliaSim.html">Compile CoppeliaSim 頁面</a>, 下載 <a href="https://drive.google.com/file/d/1hV8hHjjnLvUp-AEjd2iCfBYk067WSjcy/view?usp=sharing">coppeliaSim 4.1.0 官方版與 MSYS2 編譯版.7z</a> (檔案大小 412 MB, 解開壓縮後 1GB) 可攜套件.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step3</span>: 在 HW1 中, 要求每一位學員透過程式亂數分配 (兩班實際亂數分配結果以上課時點擊下列按鈕所得結果為準) 所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,  經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件<a href="https://www.coppeliarobotics.com/helpFiles/en/importExport.htm">匯入</a> CoppeliaSim 進行組裝配置後, 以 <a href="https://www.coppeliarobotics.com/helpFiles/en/customUIPlugin.htm">UI 介面</a>中的 slider 控制 meArm Robot 各軸的旋轉作動.</p>
<p style="padding-left: 30px;">2b CAD 套件分配結果: <a href="https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt">https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt</a></p>
<h4>附件:</h4>
<p style="padding-left: 30px;">1. CAD 套件分配表:</p>
<p style="padding-left: 60px;">sw: Solidworks, inv: Inventor, nx: NX12, ons: Onshape, slvs: Solvespace</p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cad2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/6d0b8df27021529f910cbd0fde2222b6/raw/d5dbb42166e70d9bf4815e0f669957e40106f8fc/distrubute_cad_combination.py">2a 套件亂數分配結果</a></p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cad2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/6d0b8df27021529f910cbd0fde2222b6/raw/d5dbb42166e70d9bf4815e0f669957e40106f8fc/distrubute_cad_combination_b.py">2b 套件亂數分配結果</a></p>
<p style="padding-left: 30px;">2. 在兩套 CAD 完成零件繪圖並轉入 CoppeliaSim 後, 為了建立 Dynamic Model 必須利用 <a href="https://www.coppeliarobotics.com/helpFiles/en/shapeEditModes.htm">shape edit modes</a> 轉為 <a href="https://www.coppeliarobotics.com/helpFiles/en/buildingAModelTutorial.htm">clean model</a>, 並與實際轉入的 STL 格式零件外形結合應用後建立模擬場景 (scenes).</p>
<p style="padding-left: 30px;">3. meARM Robot <a href="https://www.youtube.com/watch?v=YdhpMqNa_mE">動態模擬場景</a>的建構, 可參考 <a href="https://www.youtube.com/watch?v=ucO0v5iel-c">0</a>, <a href="https://www.youtube.com/watch?v=jeviAIlh7wY">1</a>, <a href="https://www.youtube.com/watch?v=MrmHoGa3Kg4">2</a>, <a href="https://www.youtube.com/watch?v=43-xyipH9Ss">3</a>, <a href="https://www.youtube.com/watch?v=i9e4GXov8rk">4</a>, <a href="https://www.youtube.com/watch?v=7f1jzC6Uptg">5</a>, <a href="https://www.youtube.com/watch?v=xadyMQJxjnw">6</a>, <a href="https://www.youtube.com/watch?v=SQhKlnNnzuQ">7</a>, 也可參考 <a href="https://github.com/mdecourse/models/blob/master/robots/non-mobile/uarm.ttm">Uarm Robot model</a> 與相關<a href="https://www.youtube.com/watch?v=OqPVK__z9Ek">影片</a>.</p>
<p style="padding-left: 30px;">4. CoppeliaSim design dynamic simulations <a href="https://www.coppeliarobotics.com/helpFiles/en/designingDynamicSimulations.htm">說明頁面</a>.</p>
<p style="padding-left: 30px;">5. <a href="https://mde.tw/cad2021/downloads/lua/index.html">網際 Lua</a> 程式執行.</p>
<p style="padding-left: 30px;">6. <a href="/downloads/meArm.slvs">meArm.slvs</a>, <a href="/downloads/meArm_in_solvespace.slvs">meArm_in_solvespace.slvs</a></p>
<p style="padding-left: 30px;">7. UI 介面程式參考:</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function closeEventHandler(h)
    sim.addLog(sim.verbosity_scriptinfos,'Window '..h..' is closing...')
    simUI.hide(h)
end

function joint1_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta1 set to '..newVal)
    sim.setJointTargetPosition(joint1, newVal*deg)
end

function joint2_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta2 set to '..newVal)
    sim.setJointTargetPosition(joint2, newVal*deg)
end

function joint3_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta3 set to '..newVal)
    sim.setJointTargetPosition(joint3, newVal*deg)
end

function joint16_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta16 set to '..newVal)
    sim.setJointTargetPosition(joint16, newVal*deg)
    sim.setJointTargetPosition(joint20, -newVal*deg)
end

function sysCall_init()
    -- do some initialization here
    joint1 = sim.getObjectHandle('motor1')
    joint2 = sim.getObjectHandle('motor2')
    joint3 = sim.getObjectHandle('motor3')
    joint16 = sim.getObjectHandle('motor16')
    joint20 = sim.getObjectHandle('motor20')
    i = 0
    deg = math.pi/180
    print(i)
    xml = [[
&lt;ui closeable="true" on-close="closeEventHandler" resizable="true"&gt;
    &lt;label text="This is a demo of the CustomUI plugin. Browse through the tabs below to explore all the widgets that can be created with the plugin." wordwrap="true" /&gt;
    &lt;tabs&gt;
        &lt;tab title="Numeric"&gt;a
            &lt;label text="Sliders can be oriented horizontally or vertically, and have optional properties that can be set (in the XML) such as minimum and maximum value." wordwrap="true" /&gt;
            &lt;label text="" id="3000" wordwrap="true" /&gt;
            &lt;label text="theta1" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="0" maximum="360" on-change="joint1_rotate" /&gt;
            &lt;label text="theta2" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="-90" maximum="65" on-change="joint2_rotate" /&gt;
            &lt;label text="theta3" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="-90" maximum="185" on-change="joint3_rotate" /&gt;
            &lt;label text="theta16" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="0" maximum="15" on-change="joint16_rotate" /&gt;
        &lt;/tab&gt;
    &lt;/tabs&gt;
&lt;/ui&gt;
]]
    ui=simUI.create(xml)
    
end</pre>
<p><img alt="" class="add_border" height="282" src="/images/meArm_linkage_dimension.png" width="600"/></p>
<p>(From: <a href="/downloads/2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf">2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf</a>)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/2pFReCfDZsU" title="YouTube video player" width="560"></iframe></p>
<p><span> </span></p>
<p><span>要求每一位學員透過程式亂數分配，所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,  經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件</span><a href="https://www.coppeliarobotics.com/helpFiles/en/importExport.htm">匯入</a><span><span> </span>CoppeliaSim 進行組裝配置後, 以<span> </span></span><a href="https://www.coppeliarobotics.com/helpFiles/en/customUIPlugin.htm">UI 介面</a><span>中的 slider 控制 meArm Robot 各軸的旋轉作動.</span></p>
<p><span style="color: #ff0000;">我的分配結果: nx，Solvespace</span></p>
<p><span><img alt="" height="181" src="/images/分配.png" width="337"/></span></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
  <div class="winkVideoContainerClass"><video width="500" height="281"
    <video class="winkVideoClass" data-varname="winkVideoData" data-dirname="nx-wink-files">
      <source src="/downloads/nx.mp4" type="video/mp4">
    </video>
    <div class="winkVideoOverlayClass"></div>
    <div class="winkVideoControlBarClass">
      <button class="winkVideoControlBarPlayButtonClass"></button>
      <button class="winkVideoControlBarPauseButtonClass"></button>
      <div class="winkVideoControlBarProgressLeftClass"></div>
      <div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
      <div class="winkVideoControlBarProgressRightClass"></div>
      <div class="winkVideoControlBarProgressFilledMiddleClass"></div>
      <div class="winkVideoControlBarProgressThumbClass"></div>
    </div>
    <div class="winkVideoPlayOverlayClass"></div>
  </div>
</script>
<h2>NX</h2>
<p><strong><img alt="" height="226" src="/images/NX.png" width="437"/></strong></p>
<p><strong>NX</strong>是<strong>Siemens PLM Software</strong>公司出品的一個產品工程解決方案，它為用户的產品設計及加工過程提供了數字化造型和驗證手段。</p>
<p>NX這是一個交互式 CAD/CAM(計算機輔助設計與計算機輔助製造)系統，它功能強大，可以輕鬆實現各種複雜實體及造型的建構。</p>
<p>它在誕生之初主要基於工作站，但隨着PC硬件的發展和個人用户的迅速增長，在PC上的應用取得了迅猛的增長，已經成為模具行業三維設計的一個主流應用。</p>
<p>來自SiemensPLM 的 NX使企業能夠通過新一代數字化產品開發系統實現向產品全生命週期管理轉型的目標。 NX 包含了企業中應用最廣泛的集成應用套件，用於產品設計、工程和製造全範圍的開發過程。</p>
<p><img alt="" height="178" src="/images/西門子.png" width="403"/></p>
<p></p>
<h3>NX 安裝配置</h3>
<p>CAD1 指各學員所分配到的第一套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace.</p>
<p>CAD1 套件下載安裝與配置</p>
<p>CAD1 下載安裝與配置流程 embedded 影片: 標題必須為「<span style="background-color: #ffff99;">NFU - MDE - cad2021 - 學號 - SW2020 下載安裝與配置</span>」且加上<span style="background-color: #ccffcc;">語音說明</span>與<span style="background-color: #ccffcc;">字幕.</span></p>
<p>若使用 Solidworks 2017 版, 則將 SW2020 換為 SW2017, 其他套件 INV2020 代表 AutoDesk Inventor 2020 版, 還有 Onshape 與 Solvespace 等套件名稱.</p>
<p>由於安裝配置 Solidworks 時必須使用 nfu 的 vpn, 因此各學員必須按照<a href="https://www.nfu.edu.tw/zh/approved-news-nfu/approved-news-adm/8102-110%E5%AD%B8%E5%B9%B4%E5%BA%A6ssl-vpn%E9%80%A3%E7%B7%9A%E9%96%8B%E9%80%9A%E7%94%B3%E8%AB%8B%E5%85%AC%E5%91%8A">說明</a>, 完成本學期的 vpn 使用申請.</p>
<h4></h4>
<h4>NX12 版本:</h4>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1fEZtGVCXp2vtILUZZ8vTTdtYHsbBpf7j/view?usp=sharing">NX12 安裝光碟下載</a> (必須先登入 @gm 帳號後才能下載)</p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1KWiceDX2513pWYfQzJPDboFzj5mfYokp/view?usp=sharing">NX12 可攜版本下載</a> (必須先登入 @gm 帳號後才能下載)</p>
<p style="padding-left: 30px;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Y1YD20xiIHE" width="700"></iframe></p>
<h4></h4>
<h3>NX 操作流程</h3>
<p>CAD1 指各學員所分配到的第一套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace.</p>
<p>CAD1 零組件繪圖操作流程影片 (Youtube)</p>
<p>CAD1 零組件繪圖教學影片 (Wink)</p>
<p>CAD1 零組件繪圖教學影片 embedded 影片: 標題必須為「<span style="background-color: #ffff99;">NFU - MDE - cad2021 - 學號 - SW2020 </span>零組件繪圖教學影片」且加上<span style="background-color: #ccffcc;">語音說明</span>與<span style="background-color: #ccffcc;">字幕.<br/></span></p>
<p><span style="background-color: #ccffcc;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/OGNdxFNZVYI" width="560"></iframe></span></p>
<p></p>
<h2>Solvespace</h2>
<p><span>SOLVESPACE 是一個免費的 (GPLv3) 參數化 3d CAD 工具。應用包括：</span></p>
<div class="list">
<ul>
<li><b><span><span>建模 3d 零件</span></span></b><span><span>— 使用拉伸、旋轉、螺旋線和布爾（並/差/交）操作進行繪製</span></span></li>
<li><b><span><span>二維零件建模</span></span></b><span><span>— 將</span><b><span>零件</span></b><span>繪製為單個部分，並導出 DXF、PDF、SVG；</span><span>使用 3d 裝配來驗證適合</span></span></li>
<li><b><span><span>3d 打印部件</span></span></b><span><span>— 導出大多數 3d 打印機所需的 STL 或其他三角形網格</span></span></li>
<li><b><span><span>準備 CAM 數據</span></span></b><span><span>— 為水刀機或激光切割機導出二維矢量圖；</span><span>或生成STEP或STL，導入第三方CAM軟件進行加工</span></span></li>
<li><b><span><span>機構設計</span></span></b><span><span>— 使用約束求解器模擬平面或空間鏈接，包括銷、球或滑動關節</span></span></li>
<li><b><span><span>平面和實體幾何</span></span></b><span><span>— 用實時尺寸繪圖替換手工求解的三角函數和電子表格</span></span></li>
</ul>
<p><span><span>官方網站:<a href="https://solvespace.com/index.pl">https://solvespace.com/index.pl</a></span></span></p>
</div>
<h3>Solvespace 安裝配置</h3>
<p><span>先下載 </span><strong>SolveSpace</strong></p>
<p><strong><img alt="" height="299" src="/images/z1.png" width="600"/></strong></p>
<p><strong><span>按下 </span><strong>Download</strong></strong></p>
<p><strong><strong><img alt="" height="276" src="/images/z2.png" width="600"/></strong></strong></p>
<p><strong><strong><span>點開</span><span> </span><strong>3.0stable</strong></strong></strong></p>
<p><strong><strong><strong><img alt="" height="314" src="/images/z3.png" width="600"/></strong></strong></strong></p>
<p><strong><strong><strong><span>就來到</span><strong>github</strong><span>，再選擇</span><span> </span><strong>solvespace.exe </strong><span>下載下來</span></strong></strong></strong></p>
<p><strong><strong><strong><img alt="" height="301" src="/images/z4.png" width="600"/></strong></strong></strong></p>
<p><strong><strong><strong><span>下載完後將小白窗開啟，加入 </span><span><strong>star %Disk%solvespace.exe</strong></span><span> </span><span>，儲存下來</span></strong></strong></strong></p>
<p><strong><strong><strong><span><img alt="" height="344" src="/images/z5.png" width="600"/></span></strong></strong></strong></p>
<p><strong><strong><strong><span>重啟<span> </span><strong>start_ipv4</strong><span> </span><span>後，就會直接開啟 </span><strong>solvespace</strong></span></strong></strong></strong></p>
<p><strong><strong><strong><span><strong><img alt="" height="323" src="/images/z6.png" width="600"/></strong></span></strong></strong></strong></p>
<p><b>影片</b></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/CK9byEq-qXc" width="700"></iframe></p>
<h3>solvespace 操作</h3>
<p></p>
<p><strong>Sketch 草圖</strong></p>
<p><img alt="" height="327" src="/images/a圖.png" width="600"/></p>
<p><strong><span>Constrain 約束</span></strong></p>
<p><strong><img alt="" height="308" src="/images/B圖.png" width="600"/></strong></p>
<p><strong><span>New Group 組成</span></strong></p>
<p><strong><span><img alt="" height="187" src="/images/C圖.png" width="600"/></span></strong></p>
<p><strong><span>View 視角</span></strong></p>
<p><strong><span><img alt="" height="107" src="/images/D圖.png" width="600"/></span></strong></p>
<p><strong><span>影片</span></strong></p>
<p><strong><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/f-gBtSCyMp8" width="560"></iframe></span></strong></p>
<p><strong><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/nMakKRRFBqc" width="560"></iframe></span></strong></p>
<p><strong><span></span></strong></p>
<h2>運動場景</h2>
<h4>NX:</h4>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/OGNdxFNZVYI" width="560"></iframe></p>
<p style="padding-left: 30px;"></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="281" video="" width="500">
<source src="/downloads/002.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h4>solvespace:</h4>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/nMakKRRFBqc" width="560"></iframe></p>
<p style="padding-left: 30px;"></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="004-wink-files" data-varname="winkVideoData" height="281" video="" width="500">
<source src="/downloads/004.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>wink</h2>
<p><span>Google尋找 </span><span><strong>debugmode wink</strong></span></p>
<p><span><img alt="" height="276" src="/images/aa1.png" width="600"/></span></p>
<p><span>將 <strong>wink</strong><span><span> </span>下載</span></span></p>
<p><span><span><img alt="" height="267" src="/images/aa2.png" width="600"/></span></span></p>
<p><span><span>點開 <strong>winksetup</strong><span>，按下<span> </span></span><strong>I Agree</strong></span></span></p>
<p><span><span><strong><img alt="" height="312" src="/images/aa3.png" width="600"/></strong></span></span></p>
<p>按 <strong>Browse </strong>將資料存在 <strong>date </strong>裡的 <strong>wink</strong>，最後 <strong>Install </strong>就下載好了</p>
<p><img alt="" height="318" src="/images/aa4.png" width="600"/></p>
<p><span>點開 </span><strong>wink.exe</strong></p>
<p><strong><img alt="" height="336" src="/images/aa5.png" width="600"/></strong></p>
<p><strong><span>開啟後就可以使用 </span><strong>wink</strong><span><span> </span>製作影片</span></strong></p>
<p><strong><span><img alt="" height="315" src="/images/aa6.png" width="600"/></span></strong></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="350" source="" src="/downloads/001.mp4" type="video/mp4" width="622"></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>W13</h2>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
  <div class="winkVideoContainerClass"><video width="500" height="281"
    <video class="winkVideoClass" data-varname="winkVideoData" data-dirname="nx-wink-files">
      <source src="/downloads/nx.mp4" type="video/mp4">
    </video>
    <div class="winkVideoOverlayClass"></div>
    <div class="winkVideoControlBarClass">
      <button class="winkVideoControlBarPlayButtonClass"></button>
      <button class="winkVideoControlBarPauseButtonClass"></button>
      <div class="winkVideoControlBarProgressLeftClass"></div>
      <div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
      <div class="winkVideoControlBarProgressRightClass"></div>
      <div class="winkVideoControlBarProgressFilledMiddleClass"></div>
      <div class="winkVideoControlBarProgressThumbClass"></div>
    </div>
    <div class="winkVideoPlayOverlayClass"></div>
  </div>
<h1>HW1-1</h1>
<p>HW1-1 佔學期成績 15%</p>
<p><span style="background-color: #ffff99;">HW1-1 必須在 2021.12.01 22:00 之前完成.<br></span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/6">HW1-1 具體項目成果回報區</a>將於 2021.11.18 開啟, 於 <span style="background-color: #ff99cc;">2021.12.01 22:00 關閉.</span></p>
<h4>作業 1-1: Mirobot 機械手臂場景組合</h4>
<p>說明: meArm Robot 有四個自由度, 請根據 HW1 的零組件繪製組立與 CoppeliaSim 運動場景模擬, 延伸至 <a href="https://mde.tw/cad2021/content/Task1-1.html">Task1-1</a> 中六個自由度的 Mirobot 機械手臂.</p>
<p><a href="https://drive.google.com/file/d/1hnoMQ1Hh_Hgdxh7Aym4q43DzLjOWUanR/view?usp=sharing">mirobot_part1_to_part5.7z</a> 為取自 &nbsp;<a href="https://github.com/wlkata/Mirobot-STL">https://github.com/wlkata/Mirobot-STL</a> 的參考零件. 請利用場景中 Mirobot STL 零件, 組合為可以透過 <a href="https://www.coppeliarobotics.com/helpFiles/en/customUIPlugin.htm">UI 介面</a>中的 slider 控制各軸作動旋轉的運動模型.</p>
<p>請根據 <a href="https://mde.tw/cad2021/content/Task1-1.html">Task1-1</a> 中的說明, 完成各項指定任務.</p>
<h1>W11查驗</h1>
<p>請檢查作業網站中<span>&nbsp;</span><a href="https://mde.tw/cad2021_hw/content/W11.html">W11</a><span>&nbsp;</span>週的抽點名單是否正確. 若否請透過<span>&nbsp;</span><a href="https://github.com/mdecourse/studlist">https://github.com/mdecourse/studlist</a><span>&nbsp;</span>倉儲中的 Pull Requests 機制要求訂正.</p>
<p>請各學員自選一組<a href="https://en.wikipedia.org/wiki/Four-bar_linkage">平面四連桿尺寸</a>, 分別使用個人所分配的兩套 CAD 進行零件繪圖, 完成組立後請轉入 CoppeliaSim 製作運動模擬場景.</p>
<h4>驗收交付內容:</h4>
<ol>
<li>各<span>零件尺寸圖</span>與<span>&nbsp;</span><span>3D 零件檔案</span>, 請放入各學員的倉儲中並在 W11 標題 H2 頁面中<span>提供下載</span>.</li>
<li>請將兩套 CAD<span>&nbsp;</span><span>繪圖過程製作成一份 Wink 影片</span>檔案, 並放入 W11 標題 H2 頁面中..</li>
<li>請將組立件轉入 CoppeliaSim, 並製作運動<span>模擬場景的過程, 製作成一份 Wink 影片</span>檔案, 並放入個人網頁中的 W11 標題 H2 頁面中.</li>
</ol>
<p><img alt="" height="345" src="/images/4連桿.png" width="500"></p>
<h2>零件檔案下載</h2>
<p><a href="https://drive.google.com/drive/folders/1r06qGADw9hvv_W-1Hedgo2riA0ivH5EJ?usp=sharing">NX&amp;SOLVESPACE零件</a></p>
<p><a href="https://drive.google.com/drive/folders/1PD5hS8dbpnw-U8hMOr-RoZeKvKWDwbIK?usp=sharing">3連桿零件</a></p>
<h2>零件繪製</h2>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="3連桿-wink-files" data-varname="winkVideoData" height="281" video="" width="500">
<source src="/downloads/3連桿.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
<h2>CoppeliaSim</h2>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="wink 10-wink-files" data-varname="winkVideoData" height="281" video="" width="500">
<source src="/downloads/wink 10.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h1>meARM</h1>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="wink 11-wink-files" data-varname="winkVideoData" height="281" video="" width="500">
<source src="/downloads/wink 11.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
<h2>零件Cloud</h2>
<p></p>
</div>
<p><a href="https://drive.google.com/drive/folders/1r06qGADw9hvv_W-1Hedgo2riA0ivH5EJ?usp=sharing">NX&amp;SOLVESPACE零件</a></p>
<h1>HW2</h1>
<p>HW2 佔學期成績 20%</p>
<p><span style="background-color: #ffff99;">HW2 必須在 2021.12.22 22:00 之前完成.</span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/7">HW2 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2021.12.22 22:00 關閉.</span></p>
<p>meArm 逆向運動學與網際參數式 CAD API 結合應用.</p>
<p>請將 <a href="https://github.com/mdecourse/meArm">https://github.com/mdecourse/meArm</a> 中的 meArm Robot 逆向運動學程式, 改為 Lua 與 Python 程式, 使能套用至 HW1 所完成的 CoppeliaSim meArm 運動模擬場景. 並分別採 Lua, Legacy remote API 及 Bluezero remote API 逆向運動的方式進行控制.</p>
<p>請利用 <a href="https://mde.tw/cad2021/content/Task%202.html">Task2</a> 中的 Solidworks, Inventor 與 NX API 程式控制 meArm Robot 零組件尺寸, 說明並討論如何透過網際程式控制 meArm Robot 的零件尺寸, 並結合上述逆向運動學程式庫, 使得自動化機電產品開發流程更容易滿足客製化需求.</p>
<h4>參考:</h4>
<p style="padding-left: 30px;"><a href="/downloads/2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf">2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenberg.pdf">Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenber.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/KINEMATIC ANALYSIS FOR ROBOT ARM.pdf">KINEMATIC ANALYSIS FOR ROBOT ARM.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://codebender.cc/user/MeArm">https://codebender.cc/user/MeArm</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/meArmPi">https://github.com/mdecourse/meArmPi</a></p>
<p style="padding-left: 60px;"><a href="/downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf">/downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/me-arm-ik">https://github.com/mdecourse/me-arm-ik</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/mearm_model">https://github.com/mdecourse/mearm_model</a></p>
<p style="padding-left: 30px;"><a href="https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html">https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/InefficientSkittleSorter">https://github.com/mdecourse/InefficientSkittleSorter</a></p>
<p style="padding-left: 30px;"><a href="https://mearm.com">https://mearm.com</a></p>
<h1>HW3</h1>
<p>HW3 為選項作業.</p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/9">HW3 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2022.01.05 22:00 關閉</span></p>
<p><a href="https://mde.tw/cad2021/content/Task3.html">https://mde.tw/cad2021/content/Task3.html</a> </p>
<p><a href="https://mde.tw/cad2021/content/Task4.html">https://mde.tw/cad2021/content/Task4.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task5.html">https://mde.tw/cad2021/content/Task5.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task6.html">https://mde.tw/cad2021/content/Task6.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task7.html">https://mde.tw/cad2021/content/Task7.html</a></p>
<p>請從上列 Tasks 中自行選擇項目內容完成 HW3.</p>
<h1>Final Project</h1>
<p>Final Project 佔學期成績 40%</p>
<p><span style="background-color: #ffff99;">2a 與 2b 必須在 2022.01.06 上課之前完成 Final Project</span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/8">Final Project 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2022.01.05 22:00 關閉</span></p>
<p>彈性製造系統場景設計與製作</p>
<p>請從 <a href="https://github.com/mdecourse/scenes">https://github.com/mdecourse/scenes</a> 與 <a href="https://github.com/mdecourse/models">https://github.com/mdecourse/models</a> 中選擇場景或模型, 配合 <a href="https://drive.google.com/file/d/1xb1Es8N-FxeG10OSnLNDwwi_tXyNTP9t/view?usp=sharing">cad2021_textbook.pdf</a> (登入 @gm 帳號後下載) 教材中的內容, 自選製作與組立產品, 組合成一個 Flexible Manufacturing System 系統場景.</p>
<p>彈性製造系統內容說明</p>
<h4>範例:</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/2qc0-yTXBts" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/PDSmRPh6TaM" title="YouTube video player" width="560"></iframe></p>
<h1>拯救Github帳號</h1>
<p>這學期要上課時發現我的Github帳號無法使用，並且出現 <span style="background-color: #ffffff; color: #ff0000;">Your account has been flagged.</span><br/><span style="background-color: #ffffff; color: #ff0000;">Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed.</span></p>
<p><span style="background-color: #ffffff; color: #ff0000;">您的帳戶已被標記。<br/>因此，您的個人資料對公眾是隱藏的。如果您認為這是一個錯誤，請聯繫支持人員以審核您的帳戶狀態。</span></p>
<p><span style="background-color: #ffffff; color: #000000;">並且連帶Gitter都沒辦法使用。</span></p>
<p><span style="background-color: #ffffff; color: #000000;"><img alt="" height="316" src="/images/1.png" width="562"/></span></p>
<h2>解決方法</h2>
<p><span style="background-color: #ffffff; color: #000000;">在Github點選<span style="color: #ff0000;">Pull requests<span style="color: #000000;">，向Github提出問題後寄出Email給Github。(如下圖)</span></span></span></p>
<p><span style="background-color: #ffffff; color: #000000;"><span style="color: #ff0000;"><span style="color: #000000;"><img alt="" height="202" src="/images/2.jpg" width="509"/></span></span></span></p>
<p><span style="background-color: #ffffff; color: #000000;"><span style="color: #ff0000;"><span style="color: #000000;">隨後Github回信，他們表示懷疑我<span style="color: #ff6600;">持有多個免費帳號</span>，所以將我的帳號標記。</span></span></span></p>
<p><span style="background-color: #ffffff; color: #000000;"><span style="color: #ff0000;"><span style="color: #000000;"><img alt="" height="232" src="/images/3.png" width="529"/></span></span></span></p>
<p><span style="background-color: #ffffff; color: #000000;">我就向他表示這是個天大的誤會，我並沒有持有多個免費帳號，並且這個帳號是用來學習的，請他們解除標記我的帳號。</span></p>
<p><span style="background-color: #ffffff; color: #000000;"><img alt="" height="202" src="/images/4.png" width="546"/></span></p>
<p><span style="background-color: #ffffff; color: #000000;">隨後他們收到我的回信後，就給我一份問卷請我填寫，我填寫完後他們就移除標記我的帳號了。</span></p>
<p><span style="background-color: #ffffff; color: #000000;"><img alt="" height="256" src="/images/5.png" width="540"/></span></p>
</div>